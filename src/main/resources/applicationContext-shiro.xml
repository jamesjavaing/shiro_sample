<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

	<!-- 继承AuthorizingRealm的自定义Realm-->
	<bean id="myRealm" class="cn.leepon.shiro.MyRealm" />

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>

	<!-- Shiro可控制的Web请求必须经过Shiro主过滤器的拦截-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口-->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接-->
		<property name="loginUrl" value="/login.do" />
		<!-- 登录成功后要跳转的连接-->
		<property name="successUrl" value="/first.do"/>
		
		<property name="filterChainDefinitions">
			<value>
			<!-- 对静态资源设置匿名访问 -->
			    /images/** = anon
				/js/** = anon
				/styles/** = anon
				<!-- 请求 logout.do地址，shiro去清除session-->
			    /logout.do = logout
			    /index.jsp  = user
				/first.do = user
				<!-- 所有url都必须认证通过才可以访问-->
			    /** = authc
				<!-- 所有url都可以匿名访问 -->
				<!-- /** = anon -->
			</value>
		</property>
	</bean>
		

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after the lifecycleBeanProcessor has run -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager"/> 
	</bean>



</beans>
